- Date :	10 Feb 2023, 05:30:05

- Path :	/network/lustre/iss02/aramis/projects/ihi/IMAGEN/DataBase_IMAGEN/results/SECNN3D/MAPS_hipp_C3_L_MULTI

- Model :	Sequential(
  (0): Sequential(
    (0): Sequential(
      (0): ResBlock_SE(
        (conv1): Conv3d(1, 8, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn1): BatchNorm3d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv3d(8, 8, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn2): BatchNorm3d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se_block): SE_Blocks(
          (avg_pooling_3D): AdaptiveAvgPool3d(output_size=1)
          (fc1): Linear(in_features=8, out_features=1, bias=True)
          (fc2): Linear(in_features=1, out_features=8, bias=True)
          (act1): ReLU()
          (act2): Sigmoid()
        )
        (shortcut): Sequential(
          (0): Conv3d(1, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
        )
        (act2): ReLU()
      )
      (1): MaxPool3d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (1): Sequential(
      (0): ResBlock_SE(
        (conv1): Conv3d(8, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn1): BatchNorm3d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn2): BatchNorm3d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se_block): SE_Blocks(
          (avg_pooling_3D): AdaptiveAvgPool3d(output_size=1)
          (fc1): Linear(in_features=16, out_features=2, bias=True)
          (fc2): Linear(in_features=2, out_features=16, bias=True)
          (act1): ReLU()
          (act2): Sigmoid()
        )
        (shortcut): Sequential(
          (0): Conv3d(8, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
        )
        (act2): ReLU()
      )
      (1): MaxPool3d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (2): Sequential(
      (0): ResBlock_SE(
        (conv1): Conv3d(16, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn1): BatchNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn2): BatchNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se_block): SE_Blocks(
          (avg_pooling_3D): AdaptiveAvgPool3d(output_size=1)
          (fc1): Linear(in_features=32, out_features=4, bias=True)
          (fc2): Linear(in_features=4, out_features=32, bias=True)
          (act1): ReLU()
          (act2): Sigmoid()
        )
        (shortcut): Sequential(
          (0): Conv3d(16, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
        )
        (act2): ReLU()
      )
      (1): MaxPool3d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (3): Sequential(
      (0): ResBlock_SE(
        (conv1): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn2): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se_block): SE_Blocks(
          (avg_pooling_3D): AdaptiveAvgPool3d(output_size=1)
          (fc1): Linear(in_features=64, out_features=8, bias=True)
          (fc2): Linear(in_features=8, out_features=64, bias=True)
          (act1): ReLU()
          (act2): Sigmoid()
        )
        (shortcut): Sequential(
          (0): Conv3d(32, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
        )
        (act2): ReLU()
      )
      (1): MaxPool3d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (4): Sequential(
      (0): ResBlock_SE(
        (conv1): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se_block): SE_Blocks(
          (avg_pooling_3D): AdaptiveAvgPool3d(output_size=1)
          (fc1): Linear(in_features=128, out_features=16, bias=True)
          (fc2): Linear(in_features=16, out_features=128, bias=True)
          (act1): ReLU()
          (act2): Sigmoid()
        )
        (shortcut): Sequential(
          (0): Conv3d(64, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
        )
        (act2): ReLU()
      )
      (1): MaxPool3d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
  )
  (1): Sequential(
    (0): Flatten()
    (1): Dropout(p=0.0, inplace=False)
    (2): Linear(in_features=1536, out_features=256, bias=True)
    (3): ReLU()
    (4): Linear(in_features=256, out_features=1, bias=True)
  )
)

